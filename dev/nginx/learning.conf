server {
    listen 80;
    server_name symfony.local;
    root /var/www/html/public;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    # по желанию отключите откат до PHP-скрипта для ресурсов каталогов;
    # nginx вернет ошибку 404, если файлы не будут найдены, вместо передачи
    # запроса Symfony (улучшает производительность, но страница Symfony 404 не отображается)
    # location /bundles {
    #     try_files $uri =404;
    # }

    location ~ ^/index\.php(/|$) {
        #fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;

        fastcgi_pass learning-php-fpm:9000;
        # по желанию установите значение переменных окружения, используемых в приложении
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # когда вы используете символьные ссылки для указания корню документа на
        # текущую версию вашего приложения, вы должны передать PHP FPM реальный путь
        # приложения вместо пути символьной ссылки.
        # Иначе, OPcache PHP может неверно определить изменения в ваших PHP-файлах
        # (см. https://github.com/zendtech/ZendOptimizerPlus/issues/126, чтобы узнать
        # больше информации).
        # Caveat: Когда PHP-FPM расположен на другой машине, чем nginx
        #         $realpath_root может не разрешиться, как вы ожидаете! В этом случае попробуйте
        #         использовать $document_root.
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Предотвращает URI, содержащиз фронт-контроллер. Это приведет к 404:
        # http://domain.tld/index.php/some-path
        # Удалите внутореннюю директиву, чтобы позволить такие URI
        internal;
    }

    # вернуть 404 для всех других php-файлов, не совпадающих с фронт-контроллером
    # это предотвращает доступ к другим php-файлам, к которым вы не хотите его предоставлять.
    location ~ \.php$ {
        return 404;
    }

    error_log /var/www/html/dev/nginx/logs/project_error.log;
    access_log /var/www/html/dev/nginx/logs/project_access.log;
}
